AWSTemplateFormatVersion: '2010-09-09'
Description: Route53 HandsOn

Mappings:
  StackConfig:
    VPC:
      CIDR: 10.0.0.0/24
    PrivateSubnet:
      CIDR: 10.0.0.128/26

Parameters:
  Ec2ImageId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
#---vpc
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap [ StackConfig, VPC, CIDR ]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags: 
        - Key: Name
          Value: client_vpc

#---Private RoteTable, Route, Subnet, Assosiation
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: client_vpc_privateroutetable

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: !FindInMap [ StackConfig, PrivateSubnet, CIDR ]
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: client_vpc_privatesubnet

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

#---InstanceProfile, Role
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /
      RoleName: ArrowSSMRole

  InstancePro:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: InstancePro
      Path: /
      Roles: 
        - !Ref IAMRole

#---SG
#  SecurityGroup:
#    Type: "AWS::EC2::SecurityGroup"
#    Properties:
#      GroupDescription: "Private Subnet Client SecurityGroup"
#      GroupName: "test-client-sg"
#      VpcId: !Ref VPC
#      SecurityGroupIngress: 
#        -  
#          CidrIp: "0.0.0.0/0"
#          Description: "allow ssh"
#          FromPort: 22
#          IpProtocol: "tcp"
#          ToPort: 22
#        -
#          CidrIp: "0.0.0.0/0"
#          Description: "allow https"
#          FromPort: 443
#          IpProtocol: "tcp"
#          ToPort: 443
#        -
#          CidrIp: "0.0.0.0/0"
#          Description: "allow icmp"
#          FromPort: 8
#          IpProtocol: "icmp"
#          ToPort: -1
#        -
#          CidrIp: "0.0.0.0/0"
#          Description: "allow udp"
#          FromPort: 33523
#          IpProtocol: "udp"
#          ToPort: 33523

#---EC2
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref Ec2ImageId
      IamInstanceProfile: !Ref InstancePro
      InstanceType: "t2.micro"
      AvailabilityZone: !Sub "${AWS::Region}c"
      SubnetId: !Ref PrivateSubnet
#      SecurityGroupIds: 
#        - !Ref SecurityGroup
      Tags: 
        - Key: "Name"
          Value: "test-client"

#---vpc Endpoint
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      RouteTableIds: 
        - !Ref PrivateRouteTable
      ServiceName: com.amazonaws.ap-northeast-1.s3
      VpcEndpointType: Gateway
      VpcId: !Ref VPC

  SSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.ap-northeast-1.ssm
      SubnetIds: 
        - !Ref PrivateSubnet
      VpcEndpointType: Interface
      VpcId: !Ref VPC
    
  SSMMessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.ap-northeast-1.ssmmessages
      SubnetIds: 
        - !Ref PrivateSubnet
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  EC2MessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.ap-northeast-1.ec2messages
      SubnetIds: 
        - !Ref PrivateSubnet
      VpcEndpointType: Interface
      VpcId: !Ref VPC
